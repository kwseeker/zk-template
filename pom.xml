<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>top.kwseeker.zk</groupId>
  <artifactId>zk-template</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>zk-discovery</module>
    <module>zk-loadbalance</module>
    <module>zk-configcenter</module>
    <module>zk-abc</module>
    <module>zk-src-debug</module>
    <module>zk-namedservice</module>
    <module>zk-configcenter</module>
  </modules>
  <name>zk-template</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- 注意4.0.+版本需要使用 zookeeper3.5.+版本 -->
    <apache.curator.framework>4.2.0</apache.curator.framework>
    <apache.curator.recipes>4.2.0</apache.curator.recipes>
    <apache.zookeeper.version>3.5.8</apache.zookeeper.version>
    <tec.zkclient.version>0.11</tec.zkclient.version>
    <!--<log4j2.version>2.17.1</log4j2.version>-->
    <!--<logback.version>1.2.3</logback.version>-->
    <lombok.version>1.18.20</lombok.version>
    <fastjson.version>1.2.78</fastjson.version>
    <spring.version>5.2.18.RELEASE</spring.version>
  </properties>

  <dependencies>
    <!--
      org.apache.curator	curator-recipes	  All of the recipes. Note: this artifact has dependencies on client and framework and, so, Maven (or whatever tool you're using) should pull those in automatically.
      org.apache.curator	curator-async	  Asynchronous DSL with O/R modeling, migrations and many other features.
      org.apache.curator	curator-framework	  The Curator Framework high level API. This is built on top of the client and should pull it in automatically.
      org.apache.curator	curator-client	  The Curator Client - replacement for the ZooKeeper class in the ZK distribution.
      org.apache.curator	curator-test	  Contains the TestingServer, the TestingCluster and a few other tools useful for testing.
      org.apache.curator	curator-examples	  Example usages of various Curator features.
      org.apache.curator	curator-x-discovery	  A Service Discovery implementation built on the Curator Framework.
      org.apache.curator	curator-x-discovery-server	  A RESTful server that can be used with Curator Discovery.
    -->
    <!--<dependency>-->
    <!--  <groupId>ch.qos.logback</groupId>-->
    <!--  <artifactId>logback-classic</artifactId>-->
    <!--  <version>${logback.version}</version>-->
    <!--</dependency>-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${apache.zookeeper.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-framework</artifactId>
        <version>${apache.curator.framework}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${apache.curator.recipes}</version>
      </dependency>
      <dependency>
        <groupId>com.101tec</groupId>
        <artifactId>zkclient</artifactId>
        <version>${tec.zkclient.version}</version>
      </dependency>
      <!-- spring -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!--<dependency>-->
      <!--  <groupId>org.springframework</groupId>-->
      <!--  <artifactId>spring-utils</artifactId>-->
      <!--  <version>${spring.version}</version>-->
      <!--</dependency>-->
    </dependencies>
  </dependencyManagement>
</project>
